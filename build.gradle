plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlinx.kover'
}

group = 'com.example'
version = '2.0.0'

repositories {
    mavenCentral()
    maven {
        url = "https://packages.confluent.io/maven/"
    }
}

dependencies {
    implementation libs.spring.boot.starter.data.jpa

    implementation libs.org.postgresql.postgresql

    implementation platform(libs.http4k.bom)
    implementation(platform(libs.forkhandles.bom))
    implementation platform(libs.testcontainers.bom)

    implementation libs.http4k.core
    implementation libs.http4k.server.undertow
    implementation libs.http4k.client.apache
    implementation libs.http4k.format.jackson
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.exposed.core)
    implementation(libs.exposed.dao)
    implementation(libs.exposed.jdbc)
    implementation(libs.exposed.java.time)
    implementation(libs.flyway.database.postgresql)
    implementation libs.kotlin.stdlib.jdk8
    implementation(libs.kafka.json.serializer)
    implementation(libs.connect.runtime)
    implementation(libs.kafka.clients)


    testImplementation(platform(libs.strikt.bom))
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly(libs.junit.platform.launcher)

    testImplementation(libs.strikt.jackson)
    testImplementation(libs.strikt.jvm)
    testImplementation libs.org.testcontainers.postgresql
    testImplementation libs.kafka
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching("com.example.kotlin.functional.*")
    }
}

kotlin {
    jvmToolchain(21)
}
